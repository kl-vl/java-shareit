-- shareit schema
CREATE SCHEMA IF NOT EXISTS shareit;

-- Users
CREATE TABLE IF NOT EXISTS shareit.users (
    id BIGINT GENERATED BY DEFAULT AS IDENTITY NOT NULL,
    name VARCHAR(255) NOT NULL,
    email VARCHAR(512) NOT NULL,
    CONSTRAINT pk_user PRIMARY KEY(id),
    CONSTRAINT uq_user_email UNIQUE (email)
    );

CREATE INDEX IF NOT EXISTS idx_user_name_lower ON shareit.users(name);

-- Item_requests
CREATE TABLE IF NOT EXISTS shareit.requests (
    id BIGINT GENERATED BY DEFAULT AS IDENTITY NOT NULL,
    description VARCHAR(1024) NOT NULL,
    requestor_id BIGINT NOT NULL,
    created TIMESTAMP WITHOUT TIME ZONE NOT NULL DEFAULT CURRENT_TIMESTAMP,
    status VARCHAR(20) NOT NULL DEFAULT 'PENDING',  -- Добавлен статус запроса
    CONSTRAINT pk_requests PRIMARY KEY (id),
    CONSTRAINT fk_requests_requestor FOREIGN KEY (requestor_id) REFERENCES shareit.users(id) ON DELETE CASCADE
    );

CREATE INDEX IF NOT EXISTS idx_requests_requestor ON shareit.requests(requestor_id);
CREATE INDEX IF NOT EXISTS idx_requests_status ON shareit.requests(status);
CREATE INDEX IF NOT EXISTS idx_requests_created ON shareit.requests(created);

-- Items
CREATE TABLE IF NOT EXISTS shareit.items (
    id BIGINT GENERATED BY DEFAULT AS IDENTITY NOT NULL,
    name VARCHAR(255) NOT NULL,
    description VARCHAR(1024) NOT NULL,
    is_available BOOLEAN NOT NULL DEFAULT FALSE,
    owner_id BIGINT NOT NULL,
    request_id BIGINT,
    CONSTRAINT pk_items PRIMARY KEY (id),
    CONSTRAINT fk_items_owner FOREIGN KEY (owner_id) REFERENCES shareit.users (id) ON DELETE CASCADE,
    CONSTRAINT fk_items_request FOREIGN KEY (request_id) REFERENCES shareit.requests (id) ON DELETE SET NULL
    );

CREATE INDEX IF NOT EXISTS idx_items_owner ON shareit.items(owner_id);
CREATE INDEX IF NOT EXISTS idx_items_request ON shareit.items(request_id);

-- Bookings
CREATE TABLE IF NOT EXISTS shareit.bookings (
    id BIGINT GENERATED BY DEFAULT AS IDENTITY NOT NULL,
    start_date TIMESTAMP WITHOUT TIME ZONE NOT NULL,
    end_date TIMESTAMP WITHOUT TIME ZONE NOT NULL,
    item_id BIGINT NOT NULL,
    booker_id BIGINT NOT NULL,
    status VARCHAR(16) NOT NULL,
    CONSTRAINT pk_bookings PRIMARY KEY (id),
    CONSTRAINT fk_bookings_items FOREIGN KEY (item_id) REFERENCES shareit.items (id) ON DELETE CASCADE,
    CONSTRAINT fk_bookings_users FOREIGN KEY (booker_id) REFERENCES shareit.users (id) ON DELETE CASCADE,
    CONSTRAINT chk_bookings_dates CHECK (end_date > start_date)
    );

CREATE INDEX IF NOT EXISTS idx_bookings_item_id ON shareit.bookings(item_id);
CREATE INDEX IF NOT EXISTS idx_bookings_booker_id ON shareit.bookings(booker_id);
CREATE INDEX IF NOT EXISTS idx_bookings_dates ON shareit.bookings(start_date, end_date);
CREATE INDEX IF NOT EXISTS idx_bookings_booker_item_end ON shareit.bookings(booker_id, item_id, end_date);

-- Comments
CREATE TABLE IF NOT EXISTS shareit.comments (
    id BIGINT GENERATED BY DEFAULT AS IDENTITY NOT NULL,
    text VARCHAR(1000) NOT NULL,
    created TIMESTAMP WITHOUT TIME ZONE NOT NULL DEFAULT CURRENT_TIMESTAMP,
    item_id BIGINT NOT NULL,
    author_id BIGINT NOT NULL,
    CONSTRAINT pk_comments PRIMARY KEY (id),
    CONSTRAINT fk_comments_item FOREIGN KEY (item_id) REFERENCES shareit.items(id) ON DELETE CASCADE,
    CONSTRAINT fk_comments_author FOREIGN KEY (author_id) REFERENCES shareit.users(id) ON DELETE CASCADE
    );

CREATE INDEX IF NOT EXISTS idx_comments_item_id ON shareit.comments(item_id);
CREATE INDEX IF NOT EXISTS idx_comments_author_id ON shareit.comments(author_id);